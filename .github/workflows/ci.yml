name: CI
on: [push, pull_request]
defaults:
  run:
    shell: pwsh
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Test with Pester
        run: |
          Install-Module -Name Pester -Force -SkipPublisherCheck -MinimumVersion '5.0'
          Import-Module Pester -MinimumVersion '5.0'
          Invoke-Pester -CI
      - name: Invoke action
        run: |
          $env:INPUT_SCRIPT = 'Write-Host "ok"; return "value"'
          $output = node ./dist/index.js
          if ($LASTEXITCODE -ne 0) {
            $output | Write-Error
            throw 'node failed'
          }
          $diff = Compare-Object @('ok','::set-output name=result::value') $output -CaseSensitive
          if ($diff) {
            $diff | Format-Table | Write-Host
            throw 'Output differed from the expected'
          }
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build module docs
        run: |
          ./build-docs.ps1 -Clean
          if (git status --porcelain) {
            Write-Host "::error::Documentation isn't up to date"
            return 1
          }
  self-testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get-ActionInput tests
        uses: ./
        with:
          custom-input: "test"
          script: |
            $script = Get-ActionInput script
            if ($script -notlike '$script = Get-ActionInput script*') {
              throw "Get-ActionInput for 'script' failed.`n$script"
            }
            $custom = Get-ActionInput custom-input
            if ($custom -cne 'test') {
              throw "Get-ActionInput for 'custom-input' failed.`n$custom"
            }

      - name: Set-ActionOutput test (act)
        uses: ./
        id: Set-ActionOutput
        with:
          script: Set-ActionOutput test-output 'test-value'
      - name: Set-ActionOutput test (assert)
        uses: ./
        with:
          script: |
            $output = '${{ steps.Set-ActionOutput.outputs.test-output }}'
            if ($output -cne 'test-value') {
              throw "Set-ActionOutput failed.`n$output"
            }

      - name: Add-ActionPath test (act)
        uses: ./
        with:
          script: Add-ActionPath 'testing add-path'
      - name: Add-ActionPath test (assert)
        uses: ./
        with:
          script: |
            if ($env:PATH -notlike "*testing add-path$([System.IO.Path]::PathSeparator)*") {
              throw "Add-ActionPath failed.`n$env:PATH"
            }

      - name: Add-ActionSecret test (manual check whether host-sent value is masked)
        uses: ./
        with:
          script: |
            $secret = [System.Guid]::NewGuid()
            Add-ActionSecret $secret
            Write-Host $secret
